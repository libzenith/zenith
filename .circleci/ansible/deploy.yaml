- name: Upload Zenith binaries
  hosts: pageservers:safekeepers
  gather_facts: False
  remote_user: admin
  vars:
    force_deploy: false

  tasks:

    - name: get latest version of Zenith binaries
      ignore_errors: true
      register: current_version_file
      set_fact:
        current_version: "{{ lookup('file', '.zenith_current_version') | trim }}"
      tags:
      - pageserver
      - safekeeper

    - name: set zero value for current_version
      when: current_version_file is failed
      set_fact:
        current_version: "0"
      tags:
      - pageserver
      - safekeeper

    - name: get deployed version from content of remote file
      ignore_errors: true
      ansible.builtin.slurp:
        src: /usr/local/.zenith_current_version
      register: remote_version_file
      tags:
      - pageserver
      - safekeeper

    - name: decode remote file content
      when: remote_version_file is succeeded
      set_fact:
        remote_version: "{{ remote_version_file['content'] | b64decode | trim }}"
      tags:
      - pageserver
      - safekeeper

    - name: set zero value for remote_version
      when: remote_version_file is failed
      set_fact:
        remote_version: "0"
      tags:
      - pageserver
      - safekeeper

    - name: inform about versions
      debug: msg="Version to deploy - {{ current_version }}, version on storage node - {{ remote_version }}"
      tags:
      - pageserver
      - safekeeper


    - name: upload and extract Zenith binaries to /usr/local
      when: current_version > remote_version or force_deploy
      ansible.builtin.unarchive:
        owner: root
        group: root
        src: zenith_install.tar.gz
        dest: /usr/local
      become: true
      tags:
      - pageserver
      - safekeeper
      - binaries
      - putbinaries

- name: Deploy pageserver
  hosts: pageservers
  gather_facts: False
  remote_user: admin
  vars:
    force_deploy: false

  tasks:
    - name: init pageserver
      when: current_version > remote_version or force_deploy
      shell:
        cmd: sudo -u pageserver /usr/local/bin/pageserver -c "pg_distrib_dir='/usr/local'" --init -D /storage/pageserver/data
      args:
        creates: "/storage/pageserver/data/tenants"
      environment:
        ZENITH_REPO_DIR: "/storage/pageserver/data"
        LD_LIBRARY_PATH: "/usr/local/lib"
      become: true
      tags:
      - pageserver

    - name: upload systemd service definition
      when: current_version > remote_version or force_deploy
      ansible.builtin.template:
        src: systemd/pageserver.service
        dest: /etc/systemd/system/pageserver.service
        owner: root
        group: root
        mode: '0644'
      become: true
      tags:
      - pageserver

    - name: start systemd service
      when: current_version > remote_version or force_deploy
      ansible.builtin.systemd:
        daemon_reload: yes
        name: pageserver
        enabled: yes
        state: restarted
      become: true
      tags:
      - pageserver

    - name: post version to console
      when: (current_version > remote_version or force_deploy) and console_mgmt_base_url is defined
      shell:
        cmd: |
          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          curl -sfS -d '{"version": {{ current_version }} }' -X PATCH {{ console_mgmt_base_url }}/api/v1/pageservers/$INSTANCE_ID
      tags:
      - pageserver

- name: Deploy safekeeper
  hosts: safekeepers
  gather_facts: False
  remote_user: admin
  vars:
    force_deploy: false

  tasks:

    # in the future safekeepers should discover pageservers byself
    # but currently use first pageserver that was discovered
    - name: set first pageserver var for safekeepers
      when: current_version > remote_version or force_deploy
      set_fact:
        first_pageserver: "{{ hostvars[groups['pageservers'][0]]['inventory_hostname'] }}"
      tags:
      - safekeeper

    - name: upload systemd service definition
      when: current_version > remote_version or force_deploy
      ansible.builtin.template:
        src: systemd/safekeeper.service
        dest: /etc/systemd/system/safekeeper.service
        owner: root
        group: root
        mode: '0644'
      become: true
      tags:
      - safekeeper

    - name: start systemd service
      when: current_version > remote_version or force_deploy
      ansible.builtin.systemd:
        daemon_reload: yes
        name: safekeeper
        enabled: yes
        state: restarted
      become: true
      tags:
      - safekeeper

    - name: post version to console
      when: (current_version > remote_version or force_deploy) and console_mgmt_base_url is defined
      shell:
        cmd: |
          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          curl -sfS -d '{"version": {{ current_version }} }' -X PATCH {{ console_mgmt_base_url }}/api/v1/safekeepers/$INSTANCE_ID
      tags:
      - safekeeper
