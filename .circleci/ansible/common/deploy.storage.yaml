#- name: Get binaries
#  import_playbook: get.binaries.yaml

- name: Compare versions
  hosts: storage
  gather_facts: False
  remote_user: admin

  tasks:
    - name: get current version of binaries
      set_fact:
        current_version: "{{lookup('file', '../.zenith_current_version') }}"
      tags:
      - pageserver
      - safekeeper

    - name: check that file with version exists on host
      stat:
        path: /usr/local/.zenith_current_version
      register: version_file
      tags:
      - pageserver
      - safekeeper

    - name: try to get version file from the host
      when: version_file.stat.exists
      ansible.builtin.fetch:
        src: /usr/local/.zenith_current_version
        dest: .remote_version.{{ inventory_hostname }}
        fail_on_missing: no
        flat: yes
      tags:
      - pageserver
      - safekeeper

    - name: store remote version to variable
      when: version_file.stat.exists
      set_fact:
        remote_version: "{{ lookup('file', '.remote_version.{{ inventory_hostname }}') }}"
      tags:
      - pageserver
      - safekeeper

    - name: store default value of remote version to variable in case when remote version file not found
      when: not version_file.stat.exists
      set_fact:
        remote_version: "000"
      tags:
      - pageserver
      - safekeeper

    - name: delete version file
      when: version_file.stat.exists
      local_action: file path=.remote_version.{{ inventory_hostname }} state=absent
      tags:
      - pageserver
      - safekeeper

    - name: inform about versions
      debug: msg="Version to deploy - {{ current_version }}, version on storage node - {{ remote_version }}"
      tags:
      - pageserver
      - safekeeper

    - name: inform about deployment skip
      debug: msg="Going to skip deployment because version on the storage node the same or more recent"
      when: current_version <= remote_version
      tags:
      - pageserver
      - safekeeper

- name: Upload binaries
  import_playbook: put.binaries.yaml
  when: current_version > remote_version

- name: Deploy pageserver
  hosts: pageservers
  gather_facts: False
  remote_user: admin

  tasks:
    - name: init pageserver
      when: current_version > remote_version
      shell:
        cmd: sudo -u pageserver /usr/local/bin/pageserver -c "pg_distrib_dir='/usr/local'" --init -D /storage/pageserver/data
      args:
        creates: "/storage/pageserver/data/tenants"
      environment:
        ZENITH_REPO_DIR: "/storage/pageserver/data"
        LD_LIBRARY_PATH: "/usr/local/lib"
      become: true
      tags:
      - pageserver

    - name: upload systemd service definition
      when: current_version > remote_version
      ansible.builtin.template:
        src: systemd/pageserver.service
        dest: /etc/systemd/system/pageserver.service
        owner: root
        group: root
        mode: '0644'
      become: true
      tags:
      - pageserver

    - name: start systemd service
      when: current_version > remote_version
      ansible.builtin.systemd:
        daemon_reload: yes
        name: pageserver
        enabled: yes
        state: restarted
      become: true
      tags:
      - pageserver

    - name: post version to console
      when: current_version > remote_version and hostvars.localhost.zenith.console_mgmt_base_url is defined
      shell:
        cmd: |
          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          curl -sfS -d '{"version": {{ current_version }} }' -X POST {{ hostvars.localhost.zenith.console_mgmt_base_url }}/api/v1/pageservers/$INSTANCE_ID
      tags:
      - pageserver


- name: Deploy safekeeper
  hosts: safekeepers
  gather_facts: False
  remote_user: admin

  tasks:

    # in the future safekeepers should discover pageservers byself
    # but currently use first pageserver that was discovered
    - name: use private IP of first pageserver
      when: current_version > remote_version
      set_fact:
        first_pageserver_private_ip: "{{ hostvars[groups['pageservers'][0]]['ansible_host'] }}"

    - name: upload systemd service definition
      when: current_version > remote_version
      ansible.builtin.template:
        src: systemd/safekeeper.service
        dest: /etc/systemd/system/safekeeper.service
        owner: root
        group: root
        mode: '0644'
      become: true
      tags:
      - safekeeper

    - name: start systemd service
      when: current_version > remote_version
      ansible.builtin.systemd:
        daemon_reload: yes
        name: safekeeper
        enabled: yes
        state: restarted
      become: true
      tags:
      - safekeeper

    - name: post version to console
      when: current_version > remote_version and hostvars.localhost.zenith.console_mgmt_base_url is defined
      shell:
        cmd: |
          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          curl -sfS -d '{"version": {{ current_version }} }' -X POST {{ hostvars.localhost.zenith.console_mgmt_base_url }}/api/v1/safekeepers/$INSTANCE_ID
      tags:
      - safekeeper
