name: Prepare benchmarking databases by restoring dumps

on:
  workflow_call:
    # no inputs needed
    
defaults:
  run:
    shell: bash -euxo pipefail {0}

jobs:
  setup-databases:
    strategy:
      fail-fast: false
      matrix:
        include:
        # the following hard-coded connection string which contains a password is just used for testing the workflow
        # and project will be immediately deleted after the workflow is running
        # so please don't worry about the "security issue" for now
        - BENCHMARK_CONNSTR: "postgresql://neondb_owner:4czu1xJeBkdN@ep-noisy-frost-w2k417od.us-east-2.aws.neon.build/neondb?sslmode=require"
    env:
      BENCHMARK_CONNSTR: ${{ matrix.BENCHMARK_CONNSTR }}
      LD_LIBRARY_PATH: /tmp/neon/pg_install/v16/lib

    runs-on: [ self-hosted, us-east-2, x64 ]
    container:
      image: 369495373322.dkr.ecr.eu-central-1.amazonaws.com/build-tools:pinned
      options: --init

    steps:
    - name: Download Neon artifact
      uses: ./.github/actions/download
      with:
        name: neon-${{ runner.os }}-${{ runner.arch }}-release-artifact
        path: /tmp/neon/
        prefix: latest

    # we create a table that has one row for each database that we want to restore with the status whether the restore is done    
    - name: Create benchmark_restore_status table if it does not exist
      run: |
        /tmp/neon/pg_install/v16/bin/psql "${{ env.BENCHMARK_CONNSTR }}" -c "
        CREATE TABLE IF NOT EXISTS benchmark_restore_status (
        databasename text,
        restore_done boolean
        );
        "
